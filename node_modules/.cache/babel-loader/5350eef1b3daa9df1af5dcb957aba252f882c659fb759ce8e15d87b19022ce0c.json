{"ast":null,"code":"import React,{useState,useEffect}from'react';import AccueilView from'./components/AccueilView';import AtelierView from'./components/AtelierView';import QuizGeneratorView from'./components/QuizGeneratorView';import QuizView from'./components/QuizView';import{jsx as _jsx}from\"react/jsx-runtime\";function App(){// --- ÉTATS ---\nconst[view,setView]=useState('accueil');// accueil, atelier, quizGenerator, quiz\nconst[allCards,setAllCards]=useState([]);const[itemsData,setItemsData]=useState({});const[isLoading,setIsLoading]=useState(false);const[quizQuestions,setQuizQuestions]=useState([]);// --- LOGIQUE DE DONNÉES ---\nconst loadData=async()=>{try{const[cardsRes,itemsDataRes]=await Promise.all([fetch('/api/cards'),fetch('/api/items-data')]);setAllCards(await cardsRes.json());setItemsData(await itemsDataRes.json());}catch(e){console.error(\"Erreur chargement:\",e);}};useEffect(()=>{loadData();},[]);const handleSaveText=async(item,text)=>{if(!item)return alert('Veuillez sélectionner un item.');await fetch('/api/items-data',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({item,text})});alert('Texte enregistré !');await loadData();};const handleAddNewItem=async(newItemName,callback)=>{if(!newItemName.trim())return alert('Le nom ne peut pas être vide.');const response=await fetch('/api/add-item',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({newItemName:newItemName.trim()})});if(response.ok){if(callback)callback();await loadData();alert('Item ajouté !');}else{alert(await response.text());}};const handleLaunchQuiz=async(selectedItems,numQCM)=>{if(!selectedItems||selectedItems.length===0)return alert('Veuillez sélectionner au moins un item.');setIsLoading(true);const itemValues=selectedItems.map(item=>item.value);const textsToQuiz=itemValues.map(item=>itemsData[item]).filter(Boolean);try{const response=await fetch('/api/generate-questions',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({texts:textsToQuiz,numQCM})});const data=await response.json();if(data.error||!data.questions)throw new Error(data.error||'Pas de questions reçues');setQuizQuestions(data.questions);setView('quiz');}catch(e){alert(\"Impossible de générer le quiz.\");console.error(e);}finally{setIsLoading(false);}};// --- AFFICHAGE ---\nif(isLoading){return/*#__PURE__*/_jsx(\"div\",{id:\"loading-spinner\"});}switch(view){case'atelier':return/*#__PURE__*/_jsx(AtelierView,{navigateTo:setView,allCards:allCards,itemsData:itemsData,onSave:handleSaveText,onAddItem:handleAddNewItem});case'quizGenerator':return/*#__PURE__*/_jsx(QuizGeneratorView,{navigateTo:setView,allCards:allCards,onLaunchQuiz:handleLaunchQuiz});case'quiz':return/*#__PURE__*/_jsx(QuizView,{questions:quizQuestions,onQuizEnd:()=>setView('quizGenerator')});case'accueil':default:return/*#__PURE__*/_jsx(AccueilView,{navigateTo:setView});}}export default App;","map":{"version":3,"names":["React","useState","useEffect","AccueilView","AtelierView","QuizGeneratorView","QuizView","jsx","_jsx","App","view","setView","allCards","setAllCards","itemsData","setItemsData","isLoading","setIsLoading","quizQuestions","setQuizQuestions","loadData","cardsRes","itemsDataRes","Promise","all","fetch","json","e","console","error","handleSaveText","item","text","alert","method","headers","body","JSON","stringify","handleAddNewItem","newItemName","callback","trim","response","ok","handleLaunchQuiz","selectedItems","numQCM","length","itemValues","map","value","textsToQuiz","filter","Boolean","texts","data","questions","Error","id","navigateTo","onSave","onAddItem","onLaunchQuiz","onQuizEnd"],"sources":["/Users/xavier/mon-anki-perso/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AccueilView from './components/AccueilView';\nimport AtelierView from './components/AtelierView';\nimport QuizGeneratorView from './components/QuizGeneratorView';\nimport QuizView from './components/QuizView';\n\nfunction App() {\n  // --- ÉTATS ---\n  const [view, setView] = useState('accueil'); // accueil, atelier, quizGenerator, quiz\n  const [allCards, setAllCards] = useState([]);\n  const [itemsData, setItemsData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [quizQuestions, setQuizQuestions] = useState([]);\n\n  // --- LOGIQUE DE DONNÉES ---\n  const loadData = async () => {\n    try {\n      const [cardsRes, itemsDataRes] = await Promise.all([ fetch('/api/cards'), fetch('/api/items-data') ]);\n      setAllCards(await cardsRes.json());\n      setItemsData(await itemsDataRes.json());\n    } catch (e) { console.error(\"Erreur chargement:\", e); }\n  };\n  useEffect(() => { loadData(); }, []);\n\n  const handleSaveText = async (item, text) => {\n    if (!item) return alert('Veuillez sélectionner un item.');\n    await fetch('/api/items-data', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ item, text }) });\n    alert('Texte enregistré !');\n    await loadData();\n  };\n\n  const handleAddNewItem = async (newItemName, callback) => {\n    if (!newItemName.trim()) return alert('Le nom ne peut pas être vide.');\n    const response = await fetch('/api/add-item', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ newItemName: newItemName.trim() }) });\n    if (response.ok) {\n      if (callback) callback();\n      await loadData();\n      alert('Item ajouté !');\n    } else {\n      alert(await response.text());\n    }\n  };\n\n  const handleLaunchQuiz = async (selectedItems, numQCM) => {\n    if (!selectedItems || selectedItems.length === 0) return alert('Veuillez sélectionner au moins un item.');\n    setIsLoading(true);\n    const itemValues = selectedItems.map(item => item.value);\n    const textsToQuiz = itemValues.map(item => itemsData[item]).filter(Boolean);\n    try {\n        const response = await fetch('/api/generate-questions', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ texts: textsToQuiz, numQCM })\n        });\n        const data = await response.json();\n        if (data.error || !data.questions) throw new Error(data.error || 'Pas de questions reçues');\n        setQuizQuestions(data.questions);\n        setView('quiz');\n    } catch(e) {\n        alert(\"Impossible de générer le quiz.\");\n        console.error(e);\n    } finally {\n        setIsLoading(false);\n    }\n  };\n\n  // --- AFFICHAGE ---\n  if (isLoading) { return <div id=\"loading-spinner\"></div>; }\n\n  switch (view) {\n    case 'atelier':\n      return <AtelierView navigateTo={setView} allCards={allCards} itemsData={itemsData} onSave={handleSaveText} onAddItem={handleAddNewItem} />;\n    case 'quizGenerator':\n      return <QuizGeneratorView navigateTo={setView} allCards={allCards} onLaunchQuiz={handleLaunchQuiz} />;\n    case 'quiz':\n      return <QuizView questions={quizQuestions} onQuizEnd={() => setView('quizGenerator')} />;\n    case 'accueil':\n    default:\n      return <AccueilView navigateTo={setView} />;\n  }\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}