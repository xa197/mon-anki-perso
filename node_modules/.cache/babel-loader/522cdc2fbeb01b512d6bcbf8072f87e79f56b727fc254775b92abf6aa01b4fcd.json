{"ast":null,"code":"var _jsxFileName = \"/Users/xavier/mon-anki-perso/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AtelierView from './components/AtelierView';\nimport QuizGeneratorView from './components/QuizGeneratorView';\nimport QuizView from './components/QuizView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // --- ÉTATS ---\n  const [view, setView] = useState('atelier');\n  const [allCards, setAllCards] = useState([]);\n  const [itemsData, setItemsData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [quizQuestions, setQuizQuestions] = useState([]);\n\n  // --- FONCTIONS DE DONNÉES (COMPLÈTES ET RESTAURÉES) ---\n  const loadData = async () => {\n    try {\n      const [cardsRes, itemsDataRes] = await Promise.all([fetch('/api/cards'), fetch('/api/items-data')]);\n      if (!cardsRes.ok || !itemsDataRes.ok) {\n        throw new Error('Erreur serveur');\n      }\n      setAllCards(await cardsRes.json());\n      setItemsData(await itemsDataRes.json());\n    } catch (e) {\n      console.error(\"Erreur chargement:\", e);\n    }\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n  const handleSaveText = async (item, text) => {\n    if (!item) return alert('Veuillez sélectionner un item.');\n    await fetch('/api/items-data', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        item,\n        text\n      })\n    });\n    alert('Texte enregistré !');\n    await loadData();\n  };\n  const handleAddNewItem = async (newItemName, callback) => {\n    if (!newItemName.trim()) return alert('Le nom ne peut pas être vide.');\n    const response = await fetch('/api/add-item', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        newItemName: newItemName.trim()\n      })\n    });\n    if (response.ok) {\n      if (callback) callback();\n      await loadData();\n      alert('Item ajouté !');\n    } else {\n      alert(await response.text());\n    }\n  };\n  const handleLaunchQuiz = async (selectedItems, numQCM) => {\n    if (!selectedItems || selectedItems.length === 0) return alert('Veuillez sélectionner au moins un item.');\n    setIsLoading(true);\n    const itemValues = selectedItems.map(item => item.value);\n    const textsToQuiz = itemValues.map(item => itemsData[item]).filter(Boolean);\n    try {\n      const response = await fetch('/api/generate-questions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          texts: textsToQuiz,\n          numQCM\n        })\n      });\n      const data = await response.json();\n      if (data.error || !data.questions) throw new Error(data.error || 'Pas de questions reçues');\n      setQuizQuestions(data.questions);\n      setView('quiz');\n    } catch (e) {\n      alert(\"Impossible de générer le quiz.\");\n      console.error(e);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // --- AFFICHAGE ---\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loading-spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 27\n    }, this);\n  }\n  if (view === 'quiz') {\n    return /*#__PURE__*/_jsxDEV(QuizView, {\n      questions: quizQuestions,\n      onQuizEnd: () => setView('quizGenerator')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"main-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mon Anki Perso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"main-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setView('atelier'),\n          className: view === 'atelier' ? 'active' : '',\n          children: \"Atelier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setView('quizGenerator'),\n          className: view === 'quizGenerator' ? 'active' : '',\n          children: \"Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [view === 'atelier' && /*#__PURE__*/_jsxDEV(AtelierView, {\n        navigateTo: setView,\n        allCards: allCards,\n        itemsData: itemsData,\n        onSave: handleSaveText,\n        onAddItem: handleAddNewItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), view === 'quizGenerator' && /*#__PURE__*/_jsxDEV(QuizGeneratorView, {\n        navigateTo: setView,\n        allCards: allCards,\n        onLaunchQuiz: handleLaunchQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"68Hr3hVmz5fTvmaMVEGHjwiBo5g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AtelierView","QuizGeneratorView","QuizView","jsxDEV","_jsxDEV","App","_s","view","setView","allCards","setAllCards","itemsData","setItemsData","isLoading","setIsLoading","quizQuestions","setQuizQuestions","loadData","cardsRes","itemsDataRes","Promise","all","fetch","ok","Error","json","e","console","error","handleSaveText","item","text","alert","method","headers","body","JSON","stringify","handleAddNewItem","newItemName","callback","trim","response","handleLaunchQuiz","selectedItems","numQCM","length","itemValues","map","value","textsToQuiz","filter","Boolean","texts","data","questions","id","fileName","_jsxFileName","lineNumber","columnNumber","onQuizEnd","className","children","onClick","navigateTo","onSave","onAddItem","onLaunchQuiz","_c","$RefreshReg$"],"sources":["/Users/xavier/mon-anki-perso/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AtelierView from './components/AtelierView';\nimport QuizGeneratorView from './components/QuizGeneratorView';\nimport QuizView from './components/QuizView';\n\nfunction App() {\n  // --- ÉTATS ---\n  const [view, setView] = useState('atelier');\n  const [allCards, setAllCards] = useState([]);\n  const [itemsData, setItemsData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [quizQuestions, setQuizQuestions] = useState([]);\n\n  // --- FONCTIONS DE DONNÉES (COMPLÈTES ET RESTAURÉES) ---\n  const loadData = async () => {\n    try {\n      const [cardsRes, itemsDataRes] = await Promise.all([ fetch('/api/cards'), fetch('/api/items-data') ]);\n      if (!cardsRes.ok || !itemsDataRes.ok) { throw new Error('Erreur serveur'); }\n      setAllCards(await cardsRes.json());\n      setItemsData(await itemsDataRes.json());\n    } catch (e) { console.error(\"Erreur chargement:\", e); }\n  };\n  useEffect(() => { loadData(); }, []);\n\n  const handleSaveText = async (item, text) => {\n    if (!item) return alert('Veuillez sélectionner un item.');\n    await fetch('/api/items-data', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ item, text }) });\n    alert('Texte enregistré !');\n    await loadData();\n  };\n\n  const handleAddNewItem = async (newItemName, callback) => {\n    if (!newItemName.trim()) return alert('Le nom ne peut pas être vide.');\n    const response = await fetch('/api/add-item', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ newItemName: newItemName.trim() }) });\n    if (response.ok) {\n      if (callback) callback();\n      await loadData();\n      alert('Item ajouté !');\n    } else {\n      alert(await response.text());\n    }\n  };\n\n  const handleLaunchQuiz = async (selectedItems, numQCM) => {\n    if (!selectedItems || selectedItems.length === 0) return alert('Veuillez sélectionner au moins un item.');\n    setIsLoading(true);\n    const itemValues = selectedItems.map(item => item.value);\n    const textsToQuiz = itemValues.map(item => itemsData[item]).filter(Boolean);\n    try {\n        const response = await fetch('/api/generate-questions', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ texts: textsToQuiz, numQCM })\n        });\n        const data = await response.json();\n        if (data.error || !data.questions) throw new Error(data.error || 'Pas de questions reçues');\n        setQuizQuestions(data.questions);\n        setView('quiz');\n    } catch(e) {\n        alert(\"Impossible de générer le quiz.\");\n        console.error(e);\n    } finally {\n        setIsLoading(false);\n    }\n  };\n\n  // --- AFFICHAGE ---\n  if (isLoading) { return <div id=\"loading-spinner\"></div>; }\n  \n  if (view === 'quiz') {\n    return <QuizView questions={quizQuestions} onQuizEnd={() => setView('quizGenerator')} />;\n  }\n\n  return (\n    <div className=\"app-layout\">\n      <header className=\"main-header\">\n        <h1>Mon Anki Perso</h1>\n        <nav className=\"main-nav\">\n          <button onClick={() => setView('atelier')} className={view === 'atelier' ? 'active' : ''}>\n            Atelier\n          </button>\n          <button onClick={() => setView('quizGenerator')} className={view === 'quizGenerator' ? 'active' : ''}>\n            Quiz\n          </button>\n        </nav>\n      </header>\n      \n      <main className=\"main-content\">\n        {view === 'atelier' && (\n          <AtelierView \n            navigateTo={setView}\n            allCards={allCards} \n            itemsData={itemsData} \n            onSave={handleSaveText} \n            onAddItem={handleAddNewItem} \n          />\n        )}\n        {view === 'quizGenerator' && (\n          <QuizGeneratorView \n            navigateTo={setView}\n            allCards={allCards} \n            onLaunchQuiz={handleLaunchQuiz} \n          />\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}