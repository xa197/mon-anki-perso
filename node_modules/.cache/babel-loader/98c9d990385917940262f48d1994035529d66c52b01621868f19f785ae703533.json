{"ast":null,"code":"import _objectSpread from\"/Users/xavier/mon-anki-perso/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import HomeView from'./components/HomeView';import LibraryView from'./components/LibraryView';import QuizView from'./components/QuizView';import ReviewView from'./components/ReviewView';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[currentView,setCurrentView]=useState('home');const[allCards,setAllCards]=useState([]);const[itemsData,setItemsData]=useState({});const[quizQuestions,setQuizQuestions]=useState([]);const[isLoading,setIsLoading]=useState(false);// --- NOUVEAUX ÉTATS POUR LA MÉMORISATION ---\nconst[currentItemForQuiz,setCurrentItemForQuiz]=useState(null);// Pour savoir de quel item vient le quiz\nconst[quizHistory,setQuizHistory]=useState({});// L'historique complet\n// --- Fonctions de chargement et de sauvegarde (ne changent pas) ---\nconst loadInitialData=async()=>{/* ... */};useEffect(()=>{loadInitialData();},[]);const handleSaveItemData=async(item,text)=>{/* ... */};const handleGenerateCards=async(item,text)=>{/* ... */};const handleCardUpdate=async updatedCard=>{/* ... */};// --- NOUVELLE FONCTION ---\n// Se déclenche quand un quiz commence. On mémorise l'item et les questions.\nconst handleStartQuiz=(questions,item)=>{setQuizQuestions(questions);setCurrentItemForQuiz(item);navigateTo('quiz');};// --- NOUVELLE FONCTION ---\n// Se déclenche quand un quiz est terminé. On sauvegarde les résultats.\nconst handleQuizComplete=results=>{console.log(\"Quiz terminé ! Résultats pour l'item :\",currentItemForQuiz,results);// On met à jour l'historique\nsetQuizHistory(prevHistory=>_objectSpread(_objectSpread({},prevHistory),{},{// On garde l'ancien historique\n[currentItemForQuiz]:results// On ajoute ou remplace les résultats pour l'item actuel\n}));};const navigateTo=view=>setCurrentView(view);const renderCurrentView=()=>{if(isLoading){return/*#__PURE__*/_jsx(\"div\",{id:\"loading-spinner\"});}switch(currentView){case'library':return/*#__PURE__*/_jsx(LibraryView,{navigateTo:navigateTo,allCards:allCards,itemsData:itemsData,onStartQuiz:handleStartQuiz// On passe la nouvelle fonction de démarrage\n,onSetLoading:setIsLoading,onGenerateCards:handleGenerateCards});case'quiz':return/*#__PURE__*/_jsx(QuizView,{navigateTo:navigateTo,questions:quizQuestions,onQuizComplete:handleQuizComplete// On passe la fonction de sauvegarde des résultats\n});// ... (les autres vues ne changent pas)\ncase'review':return/*#__PURE__*/_jsx(ReviewView,{navigateTo:navigateTo,allCards:allCards,onUpdateCards:handleCardUpdate});case'manage':return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Page de Gestion\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigateTo('home'),children:\"\\u2190 Accueil\"})]});case'home':default:return/*#__PURE__*/_jsx(HomeView,{navigateTo:navigateTo,allCards:allCards,itemsData:itemsData,onSaveItem:handleSaveItemData});}};return/*#__PURE__*/_jsx(\"div\",{className:\"AppContainer\",children:renderCurrentView()});}export default App;","map":{"version":3,"names":["React","useState","useEffect","HomeView","LibraryView","QuizView","ReviewView","jsx","_jsx","jsxs","_jsxs","App","currentView","setCurrentView","allCards","setAllCards","itemsData","setItemsData","quizQuestions","setQuizQuestions","isLoading","setIsLoading","currentItemForQuiz","setCurrentItemForQuiz","quizHistory","setQuizHistory","loadInitialData","handleSaveItemData","item","text","handleGenerateCards","handleCardUpdate","updatedCard","handleStartQuiz","questions","navigateTo","handleQuizComplete","results","console","log","prevHistory","_objectSpread","view","renderCurrentView","id","onStartQuiz","onSetLoading","onGenerateCards","onQuizComplete","onUpdateCards","children","onClick","onSaveItem","className"],"sources":["/Users/xavier/mon-anki-perso/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport HomeView from './components/HomeView';\nimport LibraryView from './components/LibraryView';\nimport QuizView from './components/QuizView';\nimport ReviewView from './components/ReviewView';\n\nfunction App() {\n  const [currentView, setCurrentView] = useState('home');\n  const [allCards, setAllCards] = useState([]);\n  const [itemsData, setItemsData] = useState({});\n  const [quizQuestions, setQuizQuestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  \n  // --- NOUVEAUX ÉTATS POUR LA MÉMORISATION ---\n  const [currentItemForQuiz, setCurrentItemForQuiz] = useState(null); // Pour savoir de quel item vient le quiz\n  const [quizHistory, setQuizHistory] = useState({}); // L'historique complet\n\n  // --- Fonctions de chargement et de sauvegarde (ne changent pas) ---\n  const loadInitialData = async () => { /* ... */ };\n  useEffect(() => { loadInitialData(); }, []);\n  const handleSaveItemData = async (item, text) => { /* ... */ };\n  const handleGenerateCards = async (item, text) => { /* ... */ };\n  const handleCardUpdate = async (updatedCard) => { /* ... */ };\n\n  // --- NOUVELLE FONCTION ---\n  // Se déclenche quand un quiz commence. On mémorise l'item et les questions.\n  const handleStartQuiz = (questions, item) => {\n    setQuizQuestions(questions);\n    setCurrentItemForQuiz(item);\n    navigateTo('quiz');\n  };\n\n  // --- NOUVELLE FONCTION ---\n  // Se déclenche quand un quiz est terminé. On sauvegarde les résultats.\n  const handleQuizComplete = (results) => {\n    console.log(\"Quiz terminé ! Résultats pour l'item :\", currentItemForQuiz, results);\n    // On met à jour l'historique\n    setQuizHistory(prevHistory => ({\n      ...prevHistory, // On garde l'ancien historique\n      [currentItemForQuiz]: results // On ajoute ou remplace les résultats pour l'item actuel\n    }));\n  };\n\n  const navigateTo = (view) => setCurrentView(view);\n\n  const renderCurrentView = () => {\n    if (isLoading) { return <div id=\"loading-spinner\"></div>; }\n    \n    switch (currentView) {\n      case 'library':\n        return (\n          <LibraryView \n            navigateTo={navigateTo}\n            allCards={allCards}\n            itemsData={itemsData}\n            onStartQuiz={handleStartQuiz} // On passe la nouvelle fonction de démarrage\n            onSetLoading={setIsLoading}\n            onGenerateCards={handleGenerateCards}\n          />\n        );\n      case 'quiz':\n        return (\n          <QuizView \n            navigateTo={navigateTo} \n            questions={quizQuestions}\n            onQuizComplete={handleQuizComplete} // On passe la fonction de sauvegarde des résultats\n          />\n        );\n      \n      // ... (les autres vues ne changent pas)\n      case 'review': return <ReviewView navigateTo={navigateTo} allCards={allCards} onUpdateCards={handleCardUpdate} />;\n      case 'manage': return (<div><h2>Page de Gestion</h2><button onClick={() => navigateTo('home')}>← Accueil</button></div>);\n      case 'home':\n      default:\n        return <HomeView navigateTo={navigateTo} allCards={allCards} itemsData={itemsData} onSaveItem={handleSaveItemData} />;\n    }\n  };\n\n  return ( <div className=\"AppContainer\">{renderCurrentView()}</div> );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}