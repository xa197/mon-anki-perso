{"ast":null,"code":"var _jsxFileName = \"/Users/xavier/mon-anki-perso optimisation/src/App.js\",\n  _s = $RefreshSig$();\n// Contenu complet pour App.js - Version MISE À JOUR\n\nimport React, { useState } from 'react';\nimport './style.css'; // Assurez-vous que le chemin vers votre CSS est correct\n\nimport AccueilView from './components/AccueilView';\nimport AtelierView from './components/AtelierView';\nimport QuizGeneratorView from './components/QuizGeneratorView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentView, setCurrentView] = useState('accueil'); // Par défaut, on affiche l'accueil\n  const [quizQuestions, setQuizQuestions] = useState(null);\n\n  // La fonction \"chef d'orchestre\" qui change la vue affichée\n  const navigateTo = view => {\n    setCurrentView(view);\n  };\n\n  // Fonction pour démarrer le quiz avec les bonnes questions\n  const startQuiz = questions => {\n    setQuizQuestions(questions);\n    navigateTo('quiz'); // Affiche la vue du quiz\n  };\n\n  // Affiche le bon composant en fonction de l'état 'currentView'\n  const renderView = () => {\n    switch (currentView) {\n      case 'atelier':\n        return /*#__PURE__*/_jsxDEV(AtelierView, {\n          navigateTo: navigateTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this);\n      case 'quizGenerator':\n        return /*#__PURE__*/_jsxDEV(QuizGeneratorView, {\n          navigateTo: navigateTo,\n          startQuiz: startQuiz\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this);\n      // case 'quiz': // On ajoutera le quiz plus tard si besoin\n      //   return <QuizView questions={quizQuestions} onQuizEnd={() => navigateTo('accueil')} />;\n      case 'accueil':\n      default:\n        return /*#__PURE__*/_jsxDEV(AccueilView, {\n          navigateTo: navigateTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: renderView()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kfV8hslUUzW409OdbbmRB/kq17o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AccueilView","AtelierView","QuizGeneratorView","jsxDEV","_jsxDEV","App","_s","currentView","setCurrentView","quizQuestions","setQuizQuestions","navigateTo","view","startQuiz","questions","renderView","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/Users/xavier/mon-anki-perso optimisation/src/App.js"],"sourcesContent":["// Contenu complet pour App.js - Version MISE À JOUR\n\nimport React, { useState } from 'react';\nimport './style.css'; // Assurez-vous que le chemin vers votre CSS est correct\n\nimport AccueilView from './components/AccueilView';\nimport AtelierView from './components/AtelierView';\nimport QuizGeneratorView from './components/QuizGeneratorView';\n\nfunction App() {\n  const [currentView, setCurrentView] = useState('accueil'); // Par défaut, on affiche l'accueil\n  const [quizQuestions, setQuizQuestions] = useState(null);\n\n  // La fonction \"chef d'orchestre\" qui change la vue affichée\n  const navigateTo = (view) => {\n    setCurrentView(view);\n  };\n\n  // Fonction pour démarrer le quiz avec les bonnes questions\n  const startQuiz = (questions) => {\n    setQuizQuestions(questions);\n    navigateTo('quiz'); // Affiche la vue du quiz\n  }\n\n  // Affiche le bon composant en fonction de l'état 'currentView'\n  const renderView = () => {\n    switch (currentView) {\n      case 'atelier':\n        return <AtelierView navigateTo={navigateTo} />;\n      case 'quizGenerator':\n        return <QuizGeneratorView navigateTo={navigateTo} startQuiz={startQuiz} />;\n      // case 'quiz': // On ajoutera le quiz plus tard si besoin\n      //   return <QuizView questions={quizQuestions} onQuizEnd={() => navigateTo('accueil')} />;\n      case 'accueil':\n      default:\n        return <AccueilView navigateTo={navigateTo} />;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {renderView()}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa,CAAC,CAAC;;AAEtB,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,iBAAiB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA,MAAMY,UAAU,GAAIC,IAAI,IAAK;IAC3BJ,cAAc,CAACI,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAMC,SAAS,GAAIC,SAAS,IAAK;IAC/BJ,gBAAgB,CAACI,SAAS,CAAC;IAC3BH,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;EACtB,CAAC;;EAED;EACA,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvB,QAAQR,WAAW;MACjB,KAAK,SAAS;QACZ,oBAAOH,OAAA,CAACH,WAAW;UAACU,UAAU,EAAEA;QAAW;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAChD,KAAK,eAAe;QAClB,oBAAOf,OAAA,CAACF,iBAAiB;UAACS,UAAU,EAAEA,UAAW;UAACE,SAAS,EAAEA;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC5E;MACA;MACA,KAAK,SAAS;MACd;QACE,oBAAOf,OAAA,CAACJ,WAAW;UAACW,UAAU,EAAEA;QAAW;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IAClD;EACF,CAAC;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBN,UAAU,CAAC;EAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACb,EAAA,CAnCQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}