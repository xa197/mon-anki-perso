{"ast":null,"code":"import React,{useState,useEffect}from'react';import HomeView from'./components/HomeView';import LibraryView from'./components/LibraryView';import QuizView from'./components/QuizView';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[currentView,setCurrentView]=useState('home');const[allCards,setAllCards]=useState([]);const[itemsData,setItemsData]=useState({});const[quizQuestions,setQuizQuestions]=useState([]);const[isLoading,setIsLoading]=useState(false);const loadInitialData=async()=>{try{const[cardsRes,itemsDataRes]=await Promise.all([fetch('/api/cards'),fetch('/api/items-data')]);if(!cardsRes.ok||!itemsDataRes.ok){throw new Error('Erreur serveur');}setAllCards(await cardsRes.json());setItemsData(await itemsDataRes.json());console.log(\"Données (re)chargées !\");}catch(e){console.error(\"Erreur chargement:\",e);}};useEffect(()=>{loadInitialData();},[]);const handleSaveItemData=async(item,text)=>{try{await fetch('/api/items-data',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({item,text})});await loadInitialData();alert('Texte enregistré !');}catch(e){alert('Échec.');}};// --- NOUVELLE FONCTION ---\n// Gère l'appel à l'API pour créer les cartes et met à jour l'état.\nconst handleGenerateCards=async(item,text)=>{setIsLoading(true);try{const response=await fetch('/api/generate-cards',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({item,text})});if(!response.ok)throw new Error('Erreur du serveur lors de la génération des cartes.');const result=await response.json();alert(result.message);// Affiche \"X cartes créées !\"\nawait loadInitialData();// Recharge toutes les données, y compris les nouvelles cartes\n}catch(error){console.error(error);alert(\"Impossible de générer les cartes.\");}finally{setIsLoading(false);}};const renderCurrentView=()=>{// Si isLoading est true, on affiche un spinner, peu importe la page\nif(isLoading){return/*#__PURE__*/_jsx(\"div\",{id:\"loading-spinner\"});}switch(currentView){case'library':return/*#__PURE__*/_jsx(LibraryView,{navigateTo:setCurrentView,allCards:allCards,itemsData:itemsData,onSetQuiz:setQuizQuestions,onSetLoading:setIsLoading// On passe la nouvelle fonction en prop\n,onGenerateCards:handleGenerateCards});case'quiz':return/*#__PURE__*/_jsx(QuizView,{navigateTo:setCurrentView,questions:quizQuestions});case'review':return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Page de R\\xE9vision\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentView('home'),children:\"\\u2190 Accueil\"})]});case'manage':return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Page de Gestion\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentView('home'),children:\"\\u2190 Accueil\"})]});case'home':default:return/*#__PURE__*/_jsx(HomeView,{navigateTo:setCurrentView,allCards:allCards,itemsData:itemsData,onSaveItem:handleSaveItemData});}};return/*#__PURE__*/_jsx(\"div\",{className:\"AppContainer\",children:renderCurrentView()});}export default App;","map":{"version":3,"names":["React","useState","useEffect","HomeView","LibraryView","QuizView","jsx","_jsx","jsxs","_jsxs","App","currentView","setCurrentView","allCards","setAllCards","itemsData","setItemsData","quizQuestions","setQuizQuestions","isLoading","setIsLoading","loadInitialData","cardsRes","itemsDataRes","Promise","all","fetch","ok","Error","json","console","log","e","error","handleSaveItemData","item","text","method","headers","body","JSON","stringify","alert","handleGenerateCards","response","result","message","renderCurrentView","id","navigateTo","onSetQuiz","onSetLoading","onGenerateCards","questions","children","onClick","onSaveItem","className"],"sources":["/Users/xavier/mon-anki-perso/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport HomeView from './components/HomeView';\nimport LibraryView from './components/LibraryView';\nimport QuizView from './components/QuizView';\n\nfunction App() {\n  const [currentView, setCurrentView] = useState('home');\n  const [allCards, setAllCards] = useState([]);\n  const [itemsData, setItemsData] = useState({});\n  const [quizQuestions, setQuizQuestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadInitialData = async () => {\n    try {\n      const [cardsRes, itemsDataRes] = await Promise.all([ fetch('/api/cards'), fetch('/api/items-data') ]);\n      if (!cardsRes.ok || !itemsDataRes.ok) { throw new Error('Erreur serveur'); }\n      setAllCards(await cardsRes.json());\n      setItemsData(await itemsDataRes.json());\n      console.log(\"Données (re)chargées !\");\n    } catch (e) { console.error(\"Erreur chargement:\", e); }\n  };\n  \n  useEffect(() => { loadInitialData(); }, []);\n\n  const handleSaveItemData = async (item, text) => {\n    try {\n      await fetch('/api/items-data', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ item, text }) });\n      await loadInitialData();\n      alert('Texte enregistré !');\n    } catch (e) { alert('Échec.'); }\n  };\n\n  // --- NOUVELLE FONCTION ---\n  // Gère l'appel à l'API pour créer les cartes et met à jour l'état.\n  const handleGenerateCards = async (item, text) => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('/api/generate-cards', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ item, text }),\n      });\n      if (!response.ok) throw new Error('Erreur du serveur lors de la génération des cartes.');\n\n      const result = await response.json();\n      alert(result.message); // Affiche \"X cartes créées !\"\n      await loadInitialData(); // Recharge toutes les données, y compris les nouvelles cartes\n\n    } catch (error) {\n      console.error(error);\n      alert(\"Impossible de générer les cartes.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const renderCurrentView = () => {\n    // Si isLoading est true, on affiche un spinner, peu importe la page\n    if (isLoading) {\n      return <div id=\"loading-spinner\"></div>;\n    }\n    \n    switch (currentView) {\n      case 'library':\n        return (\n          <LibraryView \n            navigateTo={setCurrentView} \n            allCards={allCards}\n            itemsData={itemsData}\n            onSetQuiz={setQuizQuestions}\n            onSetLoading={setIsLoading}\n            // On passe la nouvelle fonction en prop\n            onGenerateCards={handleGenerateCards}\n          />\n        );\n      case 'quiz':\n        return <QuizView navigateTo={setCurrentView} questions={quizQuestions} />;\n      \n      case 'review': return (<div><h2>Page de Révision</h2><button onClick={() => setCurrentView('home')}>← Accueil</button></div>);\n      case 'manage': return (<div><h2>Page de Gestion</h2><button onClick={() => setCurrentView('home')}>← Accueil</button></div>);\n      case 'home':\n      default:\n        return (\n          <HomeView \n            navigateTo={setCurrentView} \n            allCards={allCards}\n            itemsData={itemsData}\n            onSaveItem={handleSaveItemData} \n          />\n        );\n    }\n  };\n\n  return ( <div className=\"AppContainer\">{renderCurrentView()}</div> );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}