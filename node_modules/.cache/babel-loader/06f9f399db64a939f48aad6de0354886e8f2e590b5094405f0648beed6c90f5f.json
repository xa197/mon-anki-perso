{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AtelierView(_ref){let{allCards,itemsData,onSave,onAddItem}=_ref;const[selectedItem,setSelectedItem]=useState('');const[text,setText]=useState('');const[newItemName,setNewItemName]=useState('');const sortedItems=Array.from(new Set(allCards.map(c=>c.deck).filter(Boolean))).sort((a,b)=>parseInt(a.split(':')[0],10)-parseInt(b.split(':')[0],10));useEffect(()=>{setText(itemsData[selectedItem]||'');},[selectedItem,itemsData]);const handleAddItem=()=>{onAddItem(newItemName,()=>setNewItemName(''));};return/*#__PURE__*/_jsxs(\"div\",{className:\"view-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Atelier de Contenu\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newItemName,onChange:e=>setNewItemName(e.target.value),placeholder:\"Nom du nouvel item (ex: 12: Nouveau cours)\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddItem,children:\"Ajouter Item\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsxs(\"select\",{value:selectedItem,onChange:e=>setSelectedItem(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- Consulter / Modifier un item --\"}),sortedItems.map(item=>/*#__PURE__*/_jsx(\"option\",{value:item,children:item},item))]})}),/*#__PURE__*/_jsx(\"textarea\",{value:text,onChange:e=>setText(e.target.value),placeholder:\"Le contenu de l'item s\\xE9lectionn\\xE9 appara\\xEEtra ici...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onSave(selectedItem,text),disabled:!selectedItem,children:\"Enregistrer le Texte\"})]});}export default AtelierView;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","AtelierView","_ref","allCards","itemsData","onSave","onAddItem","selectedItem","setSelectedItem","text","setText","newItemName","setNewItemName","sortedItems","Array","from","Set","map","c","deck","filter","Boolean","sort","a","b","parseInt","split","handleAddItem","className","children","type","value","onChange","e","target","placeholder","onClick","item","disabled"],"sources":["/Users/xavier/mon-anki-perso/src/components/AtelierView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction AtelierView({ allCards, itemsData, onSave, onAddItem }) {\n  const [selectedItem, setSelectedItem] = useState('');\n  const [text, setText] = useState('');\n  const [newItemName, setNewItemName] = useState('');\n\n  const sortedItems = Array.from(new Set(allCards.map(c => c.deck).filter(Boolean)))\n    .sort((a, b) => parseInt(a.split(':')[0], 10) - parseInt(b.split(':')[0], 10));\n\n  useEffect(() => {\n    setText(itemsData[selectedItem] || '');\n  }, [selectedItem, itemsData]);\n\n  const handleAddItem = () => {\n    onAddItem(newItemName, () => setNewItemName(''));\n  };\n\n  return (\n    <div className=\"view-container\">\n      <h2>Atelier de Contenu</h2>\n      \n      <div className=\"form-group\">\n        <input \n          type=\"text\" \n          value={newItemName} \n          onChange={e => setNewItemName(e.target.value)} \n          placeholder=\"Nom du nouvel item (ex: 12: Nouveau cours)\"\n        />\n        <button onClick={handleAddItem}>Ajouter Item</button>\n      </div>\n      \n      <div className=\"form-group\">\n        <select value={selectedItem} onChange={e => setSelectedItem(e.target.value)}>\n          <option value=\"\">-- Consulter / Modifier un item --</option>\n          {sortedItems.map(item => <option key={item} value={item}>{item}</option>)}\n        </select>\n      </div>\n      \n      <textarea \n        value={text} \n        onChange={e => setText(e.target.value)}\n        placeholder=\"Le contenu de l'item sélectionné apparaîtra ici...\"\n      />\n      <button onClick={() => onSave(selectedItem, text)} disabled={!selectedItem}>Enregistrer le Texte</button>\n    </div>\n  );\n}\n\nexport default AtelierView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}