{"ast":null,"code":"import React,{useState,useEffect}from'react';import HomeView from'./components/HomeView';import LibraryView from'./components/LibraryView';import QuizView from'./components/QuizView';import ReviewView from'./components/ReviewView';// <-- ON IMPORTE LA NOUVELLE VUE\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[currentView,setCurrentView]=useState('home');const[allCards,setAllCards]=useState([]);const[itemsData,setItemsData]=useState({});const[quizQuestions,setQuizQuestions]=useState([]);const[isLoading,setIsLoading]=useState(false);const loadInitialData=async()=>{/* ... (ne change pas) ... */};useEffect(()=>{loadInitialData();},[]);const handleSaveItemData=async(item,text)=>{/* ... (ne change pas) ... */};const handleGenerateCards=async(item,text)=>{/* ... (ne change pas) ... */};// --- NOUVELLE FONCTION ---\n// Met à jour une seule carte dans notre état global, puis sauvegarde tout sur le serveur\nconst handleCardUpdate=async updatedCard=>{// 1. Met à jour la liste de cartes dans l'état de l'application\nconst newCardsList=allCards.map(card=>card.id===updatedCard.id?updatedCard:card);setAllCards(newCardsList);// 2. Sauvegarde la liste complète sur le serveur\ntry{await fetch('/api/cards',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(newCardsList)});}catch(e){console.error(\"Échec de la sauvegarde de la carte mise à jour:\",e);}};const renderCurrentView=()=>{if(isLoading){return/*#__PURE__*/_jsx(\"div\",{id:\"loading-spinner\"});}switch(currentView){case'review':// --- MODIFICATION ICI ---\nreturn/*#__PURE__*/_jsx(ReviewView,{navigateTo:setCurrentView,allCards:allCards,onUpdateCards:handleCardUpdate});case'library':return/*#__PURE__*/_jsx(LibraryView,{navigateTo:setCurrentView,allCards:allCards,itemsData:itemsData,onSetQuiz:setQuizQuestions,onSetLoading:setIsLoading,onGenerateCards:handleGenerateCards});case'quiz':return/*#__PURE__*/_jsx(QuizView,{navigateTo:setCurrentView,questions:quizQuestions});case'manage':return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Page de Gestion\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentView('home'),children:\"\\u2190 Accueil\"})]});case'home':default:return/*#__PURE__*/_jsx(HomeView,{navigateTo:setCurrentView,allCards:allCards,itemsData:itemsData,onSaveItem:handleSaveItemData});}};return/*#__PURE__*/_jsx(\"div\",{className:\"AppContainer\",children:renderCurrentView()});}export default App;","map":{"version":3,"names":["React","useState","useEffect","HomeView","LibraryView","QuizView","ReviewView","jsx","_jsx","jsxs","_jsxs","App","currentView","setCurrentView","allCards","setAllCards","itemsData","setItemsData","quizQuestions","setQuizQuestions","isLoading","setIsLoading","loadInitialData","handleSaveItemData","item","text","handleGenerateCards","handleCardUpdate","updatedCard","newCardsList","map","card","id","fetch","method","headers","body","JSON","stringify","e","console","error","renderCurrentView","navigateTo","onUpdateCards","onSetQuiz","onSetLoading","onGenerateCards","questions","children","onClick","onSaveItem","className"],"sources":["/Users/xavier/mon-anki-perso/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport HomeView from './components/HomeView';\nimport LibraryView from './components/LibraryView';\nimport QuizView from './components/QuizView';\nimport ReviewView from './components/ReviewView'; // <-- ON IMPORTE LA NOUVELLE VUE\n\nfunction App() {\n  const [currentView, setCurrentView] = useState('home');\n  const [allCards, setAllCards] = useState([]);\n  const [itemsData, setItemsData] = useState({});\n  const [quizQuestions, setQuizQuestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadInitialData = async () => { /* ... (ne change pas) ... */ };\n  useEffect(() => { loadInitialData(); }, []);\n  const handleSaveItemData = async (item, text) => { /* ... (ne change pas) ... */ };\n  const handleGenerateCards = async (item, text) => { /* ... (ne change pas) ... */ };\n\n  // --- NOUVELLE FONCTION ---\n  // Met à jour une seule carte dans notre état global, puis sauvegarde tout sur le serveur\n  const handleCardUpdate = async (updatedCard) => {\n    // 1. Met à jour la liste de cartes dans l'état de l'application\n    const newCardsList = allCards.map(card => \n      card.id === updatedCard.id ? updatedCard : card\n    );\n    setAllCards(newCardsList);\n\n    // 2. Sauvegarde la liste complète sur le serveur\n    try {\n      await fetch('/api/cards', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(newCardsList)\n      });\n    } catch (e) {\n      console.error(\"Échec de la sauvegarde de la carte mise à jour:\", e);\n    }\n  };\n\n  const renderCurrentView = () => {\n    if (isLoading) { return <div id=\"loading-spinner\"></div>; }\n    \n    switch (currentView) {\n      case 'review':\n        // --- MODIFICATION ICI ---\n        return (\n          <ReviewView\n            navigateTo={setCurrentView}\n            allCards={allCards}\n            onUpdateCards={handleCardUpdate}\n          />\n        );\n\n      case 'library':\n        return (\n          <LibraryView \n            navigateTo={setCurrentView} \n            allCards={allCards}\n            itemsData={itemsData}\n            onSetQuiz={setQuizQuestions}\n            onSetLoading={setIsLoading}\n            onGenerateCards={handleGenerateCards}\n          />\n        );\n      case 'quiz':\n        return <QuizView navigateTo={setCurrentView} questions={quizQuestions} />;\n      \n      case 'manage': return (<div><h2>Page de Gestion</h2><button onClick={() => setCurrentView('home')}>← Accueil</button></div>);\n      case 'home':\n      default:\n        return (\n          <HomeView \n            navigateTo={setCurrentView} \n            allCards={allCards}\n            itemsData={itemsData}\n            onSaveItem={handleSaveItemData} \n          />\n        );\n    }\n  };\n\n  return ( <div className=\"AppContainer\">{renderCurrentView()}</div> );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}