{"ast":null,"code":"import _objectSpread from\"/Users/xavier/mon-anki-perso/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import QuizView from'./components/QuizView';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// --- ÉTATS PRINCIPAUX ---\nconst[allCards,setAllCards]=useState([]);const[itemsData,setItemsData]=useState({});const[isLoading,setIsLoading]=useState(false);// --- ÉTATS POUR LA RUBRIQUE 1 : ATELIER ---\nconst[selectedItemAtelier,setSelectedItemAtelier]=useState('');const[atelierText,setAtelierText]=useState('');const[newItemName,setNewItemName]=useState('');// --- ÉTATS POUR LA RUBRIQUE 2 : QUIZ ---\nconst[selectedItemsQuiz,setSelectedItemsQuiz]=useState(new Set());const[numQCM,setNumQCM]=useState(5);const[quizQuestions,setQuizQuestions]=useState([]);const[isQuizActive,setIsQuizActive]=useState(false);const[currentItemForQuiz,setCurrentItemForQuiz]=useState(null);// Pour la mémorisation\nconst[quizHistory,setQuizHistory]=useState({});// L'historique des résultats\n// --- CHARGEMENT DES DONNÉES ---\nconst loadData=async()=>{try{const[cardsRes,itemsDataRes]=await Promise.all([fetch('/api/cards'),fetch('/api/items-data')]);setAllCards(await cardsRes.json());setItemsData(await itemsDataRes.json());}catch(e){console.error(\"Erreur chargement:\",e);}};useEffect(()=>{loadData();},[]);// --- LOGIQUE ATELIER ---\nconst handleAtelierSelectChange=e=>{const item=e.target.value;setSelectedItemAtelier(item);setAtelierText(itemsData[item]||'');};const handleSaveText=async()=>{if(!selectedItemAtelier)return alert('Veuillez sélectionner un item.');await fetch('/api/items-data',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({item:selectedItemAtelier,text:atelierText})});alert('Texte enregistré !');await loadData();};const handleAddNewItem=async()=>{if(!newItemName.trim())return alert('Le nom ne peut pas être vide.');const response=await fetch('/api/add-item',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({newItemName:newItemName.trim()})});if(response.ok){setNewItemName('');await loadData();alert('Item ajouté !');}else{alert(await response.text());}};// --- LOGIQUE QUIZ ---\nconst handleQuizItemToggle=itemName=>{const newSelection=new Set(selectedItemsQuiz);if(newSelection.has(itemName)){newSelection.delete(itemName);}else{newSelection.add(itemName);}setSelectedItemsQuiz(newSelection);};const handleLaunchQuiz=async()=>{if(selectedItemsQuiz.size===0)return alert('Veuillez sélectionner au moins un item.');setIsLoading(true);const textsToQuiz=Array.from(selectedItemsQuiz).map(item=>itemsData[item]).filter(Boolean);try{const response=await fetch('/api/generate-questions',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({texts:textsToQuiz,numQCM})});const data=await response.json();if(data.error||!data.questions)throw new Error(data.error||'Pas de questions reçues');setQuizQuestions(data.questions);// On mémorise de quel(s) item(s) vient ce quiz\nsetCurrentItemForQuiz(Array.from(selectedItemsQuiz).join(', '));setIsQuizActive(true);}catch(e){alert(\"Impossible de générer le quiz.\");console.error(e);}finally{setIsLoading(false);}};// Fonction appelée à la fin d'un quiz\nconst handleQuizComplete=results=>{console.log(\"Quiz terminé ! Résultats pour l'item(s) :\",currentItemForQuiz,results);setQuizHistory(prevHistory=>_objectSpread(_objectSpread({},prevHistory),{},{[currentItemForQuiz]:results}));setIsQuizActive(false);// On revient à la page principale\n};// --- AFFICHAGE ---\nconst sortedItems=Array.from(new Set(allCards.map(c=>c.deck).filter(Boolean))).sort((a,b)=>parseInt(a.split(':')[0],10)-parseInt(b.split(':')[0],10));if(isLoading){return/*#__PURE__*/_jsx(\"div\",{id:\"loading-spinner\"});}// Si le quiz est actif, on affiche UNIQUEMENT la vue du quiz\nif(isQuizActive){return/*#__PURE__*/_jsx(QuizView,{questions:quizQuestions,onQuizComplete:handleQuizComplete// On passe la fonction pour enregistrer les résultats\n,navigateTo:()=>setIsQuizActive(false)// Pour les boutons \"Retour\"\n});}// Sinon, on affiche la page principale avec les deux rubriques\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"main-container\",children:[/*#__PURE__*/_jsx(\"section\",{className:\"rubrique\"}),/*#__PURE__*/_jsx(\"section\",{className:\"rubrique\"})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","QuizView","jsx","_jsx","jsxs","_jsxs","App","allCards","setAllCards","itemsData","setItemsData","isLoading","setIsLoading","selectedItemAtelier","setSelectedItemAtelier","atelierText","setAtelierText","newItemName","setNewItemName","selectedItemsQuiz","setSelectedItemsQuiz","Set","numQCM","setNumQCM","quizQuestions","setQuizQuestions","isQuizActive","setIsQuizActive","currentItemForQuiz","setCurrentItemForQuiz","quizHistory","setQuizHistory","loadData","cardsRes","itemsDataRes","Promise","all","fetch","json","e","console","error","handleAtelierSelectChange","item","target","value","handleSaveText","alert","method","headers","body","JSON","stringify","text","handleAddNewItem","trim","response","ok","handleQuizItemToggle","itemName","newSelection","has","delete","add","handleLaunchQuiz","size","textsToQuiz","Array","from","map","filter","Boolean","texts","data","questions","Error","join","handleQuizComplete","results","log","prevHistory","_objectSpread","sortedItems","c","deck","sort","a","b","parseInt","split","id","onQuizComplete","navigateTo","className","children"],"sources":["/Users/xavier/mon-anki-perso/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport QuizView from './components/QuizView';\n\nfunction App() {\n  // --- ÉTATS PRINCIPAUX ---\n  const [allCards, setAllCards] = useState([]);\n  const [itemsData, setItemsData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  // --- ÉTATS POUR LA RUBRIQUE 1 : ATELIER ---\n  const [selectedItemAtelier, setSelectedItemAtelier] = useState('');\n  const [atelierText, setAtelierText] = useState('');\n  const [newItemName, setNewItemName] = useState('');\n\n  // --- ÉTATS POUR LA RUBRIQUE 2 : QUIZ ---\n  const [selectedItemsQuiz, setSelectedItemsQuiz] = useState(new Set());\n  const [numQCM, setNumQCM] = useState(5);\n  const [quizQuestions, setQuizQuestions] = useState([]);\n  const [isQuizActive, setIsQuizActive] = useState(false);\n  const [currentItemForQuiz, setCurrentItemForQuiz] = useState(null); // Pour la mémorisation\n  const [quizHistory, setQuizHistory] = useState({}); // L'historique des résultats\n\n  // --- CHARGEMENT DES DONNÉES ---\n  const loadData = async () => {\n    try {\n      const [cardsRes, itemsDataRes] = await Promise.all([ fetch('/api/cards'), fetch('/api/items-data') ]);\n      setAllCards(await cardsRes.json());\n      setItemsData(await itemsDataRes.json());\n    } catch (e) { console.error(\"Erreur chargement:\", e); }\n  };\n  useEffect(() => { loadData(); }, []);\n\n  // --- LOGIQUE ATELIER ---\n  const handleAtelierSelectChange = (e) => {\n    const item = e.target.value;\n    setSelectedItemAtelier(item);\n    setAtelierText(itemsData[item] || '');\n  };\n  const handleSaveText = async () => {\n    if (!selectedItemAtelier) return alert('Veuillez sélectionner un item.');\n    await fetch('/api/items-data', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ item: selectedItemAtelier, text: atelierText }) });\n    alert('Texte enregistré !');\n    await loadData();\n  };\n  const handleAddNewItem = async () => {\n    if (!newItemName.trim()) return alert('Le nom ne peut pas être vide.');\n    const response = await fetch('/api/add-item', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ newItemName: newItemName.trim() }) });\n    if (response.ok) {\n      setNewItemName('');\n      await loadData();\n      alert('Item ajouté !');\n    } else {\n      alert(await response.text());\n    }\n  };\n\n  // --- LOGIQUE QUIZ ---\n  const handleQuizItemToggle = (itemName) => {\n    const newSelection = new Set(selectedItemsQuiz);\n    if (newSelection.has(itemName)) { newSelection.delete(itemName); } \n    else { newSelection.add(itemName); }\n    setSelectedItemsQuiz(newSelection);\n  };\n\n  const handleLaunchQuiz = async () => {\n    if (selectedItemsQuiz.size === 0) return alert('Veuillez sélectionner au moins un item.');\n    setIsLoading(true);\n    const textsToQuiz = Array.from(selectedItemsQuiz).map(item => itemsData[item]).filter(Boolean);\n    try {\n        const response = await fetch('/api/generate-questions', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ texts: textsToQuiz, numQCM })\n        });\n        const data = await response.json();\n        if (data.error || !data.questions) throw new Error(data.error || 'Pas de questions reçues');\n        setQuizQuestions(data.questions);\n        // On mémorise de quel(s) item(s) vient ce quiz\n        setCurrentItemForQuiz(Array.from(selectedItemsQuiz).join(', '));\n        setIsQuizActive(true);\n    } catch(e) {\n        alert(\"Impossible de générer le quiz.\");\n        console.error(e);\n    } finally {\n        setIsLoading(false);\n    }\n  };\n  \n  // Fonction appelée à la fin d'un quiz\n  const handleQuizComplete = (results) => {\n    console.log(\"Quiz terminé ! Résultats pour l'item(s) :\", currentItemForQuiz, results);\n    setQuizHistory(prevHistory => ({\n      ...prevHistory,\n      [currentItemForQuiz]: results \n    }));\n    setIsQuizActive(false); // On revient à la page principale\n  };\n\n  // --- AFFICHAGE ---\n  const sortedItems = Array.from(new Set(allCards.map(c => c.deck).filter(Boolean)))\n    .sort((a, b) => parseInt(a.split(':')[0], 10) - parseInt(b.split(':')[0], 10));\n\n  if (isLoading) {\n    return <div id=\"loading-spinner\"></div>;\n  }\n\n  // Si le quiz est actif, on affiche UNIQUEMENT la vue du quiz\n  if (isQuizActive) {\n    return (\n      <QuizView \n        questions={quizQuestions} \n        onQuizComplete={handleQuizComplete} // On passe la fonction pour enregistrer les résultats\n        navigateTo={() => setIsQuizActive(false)} // Pour les boutons \"Retour\"\n      />\n    );\n  }\n\n  // Sinon, on affiche la page principale avec les deux rubriques\n  return (\n    <div className=\"main-container\">\n      <section className=\"rubrique\">{/* ... Atelier ... */}</section>\n      <section className=\"rubrique\">{/* ... Quiz ... */}</section>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}